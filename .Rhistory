roxygen2::roxygenise()
library(synoptReg)
sdata_mslp <- tidy_cuttime_nc(datalist = mslp, only_convert = T)
clasi <- synoptclas(smode_data = sdata_mslp$smode_data, ncomp = 5)
for (ii in 1:10) {
plot_clas(mslp$lon, mslp$lat,grouped_data = clasi$grouped_data,cwt_number = ii, legend.lab = "hPa")
title(paste("CWT ", ii))
}
dev.off()
plot.new()
for (ii in 1:10) {
plot_clas(mslp$lon, mslp$lat,grouped_data = clasi$grouped_data,cwt_number = ii, legend.lab = "hPa")
title(paste("CWT ", ii))
}
# Generació de 4 plots SLP sota una mateixa llegenda
par(mfrow = c(2,2))
for (ii in 1:10) {
plot_clas(mslp$lon, mslp$lat,grouped_data = clasi$grouped_data,cwt_number = ii, legend.lab = "hPa")
title(paste("CWT ", ii))
}
Sys.which("pdflatex")
Sys.getenv("PATH")
Sys.which("pdflatex")
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"/usr/texbin",sep=":"))
Sys.which("pdflatex")
Sys.which('texi2dvi')
Sys.getenv(“PATH”)
Sys.getenv("PATH")
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"/usr/texbin",sep=":"))
Sys.getenv("PATH")
Sys.which("pdflatex")
Sys.which("pdflatexs.getenv("PATH")
Sys.which("pdflatexs.getenv("PATH"))
Sys.which(pdflatexs.getenv("PATH"))
Sys.which('pdflatexs.getenv("PATH"))
)
)
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"/usr/texbin",sep=":"))
Sys.getenv("PATH")
Sys.which("pdflatex")
Sys.setenv(PATH=paste("/usr/texbin",sep=":"))
Sys.which("pdflatex")
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"/usr/texbin",sep=":"))
Sys.which("pdflatex")
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"/usr/texbin",sep=":"))
Sys.which("pdflatex")
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"/usr/texbin",sep=":"))
Sys.which("pdflatex")
Sys.getenv("PATH")
Sys.which("pdflatex")
install.packages("knitr")
install.packages("knitr")
library(knitr)
install.packages("knitr")
Sys.getenv("PATH")
/etc/paths.d
install.packages("mactex")
Sys.setenv("/Library/TeX/texbin/pdflatex", /usr/texbin)
Sys.setenv("/Library/TeX/texbin/pdflatex", "/usr/texbin")
Sys.which("pdflatex")
Sys.setenv("/Library/TeX/texbin/pdflatex", "/usr/texbin")
Sys.setenv("/Library/TeX/texbin/pdflatex", "/usr/texbin")
Sys.getenv("PATH")
Sys.setenv("/Library/TeX/texbin/pdflatex", "/usr/bin")
install.packages(sweave)
install.packages("sweave")
install.packages("Sweave")
Sys.getenv("R_ENVIRON")
Sys.which('texi2dvi')
Sys.which("pdflatex")
Sys.which("pdflatex")
Sys.which('texi2dvi')
install.packages("tools")
install.packages("tools")
install.packages("tools")
tools::texi2dvi()
tools::texi2pdf()
Sys.which('texi2dvi')
Sys.which("pdflatex")
install.packages("installr")
install.pandoc()
roxygen2::roxygenise()
library(devtools)
devtools::build_win()
devtools::build_win()
devtools::build_win()
devtools::build_win()
devtools::build_win()
devtools::build_win()
devtools::build_win()
devtools::build_win()
devtools::build_win()
devtools::build_win()
install.packages("rhub")
library(rhub)
validate_email()
validate_email()
list_validated_emails()
rhub::check()
15
rhub::check_on_macos()
rhub::check()
rhub::check()
rhub::check()
roxygen2::roxygenise()
rhub::check()
H
roxygen2::roxygenise()
rhub::check()
roxygen2::roxygenise()
rhub::check()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
rhub::check()
library(synoptReg)
load(precp_grid)
class(precp_grid)
precp_bal <- tidy_cuttime_nc(datalist = precp_grid,only_convert = T)
class(precp_bal)
precp_bal
pca<-princomp(precp_bal$smode_data, cor = T, scores = T)
pca<-princomp(precp_bal$smode_data, cor = T, scores = T)
precp_bal$smode_data
str(precp_bal$smode_data)
library(synoptReg)
data_slp<-tidy_cuttime_nc(mslp)
clas<-synoptclas(data_slp$smode_data,ncomp = 10)
plot_env(longitude = mslp$lon, latitude = mslp$lat,cluster_data = clas$clas, clas$grouped_data)
plot_clas(longitude = mslp$lon, latitude = mslp$lat,cluster_data = clas$clas, clas$grouped_data)
plot_clas(longitude = mslp$lon, latitude = mslp$lat,cluster_data = clas$clas, clas$grouped_data, cwt_number = 1)
dev.off()
plot.new()
plot_clas(longitude = mslp$lon, latitude = mslp$lat,cluster_data = clas$clas, clas$grouped_data, cwt_number = 1)
plot_clas(longitude = mslp$lon, latitude = mslp$lat, clas$grouped_data, cwt_number = 1)
warnings()
plot_clas(longitude = mslp$lon, latitude = mslp$lat, clas$grouped_data, cwt_number = 1)
install.packages("tidyverse")
install.packages("sf")
install.packages("lubridate")
library(lubridate) #la necesitamos para manipular fechas
library(tidyverse) #para visualizar y manipular
library(RColorBrewer) #colores para la visualización
str(data_slp)
df <- gather(data_slp$smode_data,day,Ta,Ta01:Ta07)%>%
mutate(month=factor(month,unique(month),c("Jan","Jul")))
df <- gather(data_slp$smode_data,day,Ta)%>%
mutate(month=factor(month,unique(month),c("Jan","Jul")))
head(data_slp$smode_data)
gather(data = data_slp$smode_data, key = "V")
# colapsem lat lons per tenir per cada observació
lonlat <- expand.grid(lon=mslp$lon,lat=mslp$lat)
#lonlat es carácter, ya que fue un nombre, por eso lo convertimos en númerico
lonlat <- apply(lonlat,2,as.numeric)
str(data_slp)
head(lonlat)
str(clas$grouped_data)
# format tidy
gather(data = clas$grouped_data, key = "V")
# format tidy
grouped_data_reform <- gather(data = clas$grouped_data, key = "V")
str(clas$grouped_data)
# format tidy
grouped_data_reform <- gather(data = clas$grouped_data[2:nrow(clas$grouped_data)], key = "V")
# format tidy
grouped_data_reform <- gather(data = clas$grouped_data[2:ncol(clas$grouped_data)], key = "V")
head(grouped_data_reform)
# format tidy
grouped_data_reform <- gather(data = clas$grouped_data[,2:ncol(clas$grouped_data)], key = "V")
head(grouped_data_reform)
# format tidy
grouped_data_reform <- gather(data = clas$grouped_data[,2:ncol(clas$grouped_data)], key = "V")
# format tidy
grouped_data_reform <- gather(data = clas$grouped_data[2:ncol(clas$grouped_data),], key = "V")
head(grouped_data_reform)
ggplot(df)+
geom_tile(aes(mslp$lon,mslp$lat,fill=value))+ #temperatura
# geom_sf(data=limit,fill=NA,size=.5)+ #limite
scale_fill_gradientn(colours=rev(colbr))+
coord_sf(ylim=c(30,60),xlim=c(-30,50))+
scale_x_continuous(breaks=seq(-30,50,10),expand=c(0,0))+
scale_y_continuous(breaks=seq(30,60,5),expand=c(0,0))+
labs(x="",y="",fill="Ta 850hPa (ºC)")+
facet_grid(~.)+ #mapa por mes
theme_bw()
if(!require("RNCEP")) install.packages("RNCEP")
if(!require("lubridate")) install.packages("lubridate")
if(!require("tidyverse")) install.packages("tidyverse")
if(!require("sf")) install.packages("sf")
#cargamos las librerías
library(RNCEP)
library(lubridate) #la necesitamos para manipular fechas
library(tidyverse) #para visualizar y manipular
library(RColorBrewer) #colores para la visualización
library(sf) #para importar un shapefile y trabajar con geom_sf
#definimos los argumentos necesarios
month_range <- c(1,12)     #período de meses
year_range <- c(2016,2016) #período de años
lat_range <- c(30,60)      #rango de latitud
lon_range <- c(-30,50)     #rango de longitud
data <- NCEP.gather("air",    #nombre de la variable
850, #altura 850hPa
month_range,year_range,
lat_range,lon_range,
return.units = TRUE,
reanalysis2=TRUE)
dim(data)
install.packages("RNCEP")
#cargamos las librerías
library(RNCEP)
install.packages("tcltk")
#cargamos las librerías
library(RNCEP)
RNCEP::
remove.packages("RNCEP")
install.packages("RNCEP")
#cargamos las librerías
library(RNCEP)
#instalamos las librerías RNCEP, lubridate y tidyverse
if(!require("RNCEP")) install.packages("RNCEP")
#instalamos las librerías RNCEP, lubridate y tidyverse
if(!require("RNCEP")) install.packages("RNCEP")
install.packages("tcltk2")
library(tcltk2)
install.packages("tcltk")
library(tcltk)
install.packages(RNCEP)
install.packages("RNCEP")
library("RNCEP")
install.packages("RNCEP")
install.packages("RNCEP")
library("RNCEP")
install.packages("maps")
install.packages("maps")
library("RNCEP")
#definimos los argumentos necesarios
month_range <- c(1,12)     #período de meses
year_range <- c(2016,2016) #período de años
lat_range <- c(30,60)      #rango de latitud
lon_range <- c(-30,50)     #rango de longitud
data <- NCEP.gather("air",    #nombre de la variable
850, #altura 850hPa
month_range,year_range,
lat_range,lon_range,
return.units = TRUE,
reanalysis2=TRUE)
library("ffanalytics")
install.packages("ffanalytics")
options(download.file.method = "internal")
options(download.file.method = "internal")
library(RNCEP)
#definimos los argumentos necesarios
month_range <- c(1,12)     #período de meses
year_range <- c(2016,2016) #período de años
lat_range <- c(30,60)      #rango de latitud
lon_range <- c(-30,50)     #rango de longitud
data <- NCEP.gather("air",    #nombre de la variable
850, #altura 850hPa
month_range,year_range,
lat_range,lon_range,
return.units = TRUE,
reanalysis2=TRUE)
library(devtools)
install_github("lemuscanovas/synoptReg")
library(synoptReg)
